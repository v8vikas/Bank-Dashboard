{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_ACCOUNT, ACCOUNTS_LOADING, DELETE_ACCOUNT, GET_ACCOUNTS, GET_TRANSACTIONS, TRANSACTIONS_LOADING, GET_AUTH } from \"./types\"; //add account\n\nexport const addAccount = plaidData => dispatch => {\n  const accounts = plaidData.accounts;\n  axios.post(\"/api/plaid/accounts/add\", plaidData).then(res => dispatch({\n    type: ADD_ACCOUNT,\n    payload: res.data\n  })).then(data => accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null).catch(err => console.log(err));\n};\nexport const deleteAccount = plaidData => dispatch => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(account => account._id !== id);\n    axios.delete(`/api/plaid/accounts/${id}`).then(res => {\n      dispatch({\n        type: DELETE_ACCOUNT,\n        payload: id\n      });\n    }).then(newAccounts ? dispatch(getTransactions(newAccounts)) : null).catch(err => console.log(err));\n  }\n}; // Get all accounts for specific user\n\nexport const getAccounts = () => dispatch => {\n  dispatch(setAccountsLoading());\n  axios.get(\"api/plaid/accounts\").then(res => dispatch({\n    type: GET_ACCOUNTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ACCOUNTS,\n    payload: null\n  }));\n}; // Accounts loading\n\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING\n  };\n}; // Get Transactions\n\nexport const getTransactions = plaidData => dispatch => {\n  dispatch(setTransactionsLoading());\n  axios.post(\"/api/plaid/accounts/transactions\", plaidData).then(res => dispatch({\n    type: GET_TRANSACTIONS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_TRANSACTIONS,\n    payload: null\n  }));\n}; // Transactions loading\n\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING\n  };\n}; // Get Auth\n\nexport const getAuth = plaidData => dispatch => {\n  axios.post(\"/api/plaid/accounts/auth\", plaidData).then(res => dispatch({\n    type: GET_AUTH,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_AUTH,\n    payload: null\n  }));\n};","map":{"version":3,"sources":["D:/Bank-Dashboard-App-master/client/src/actions/accountActions.js"],"names":["axios","ADD_ACCOUNT","ACCOUNTS_LOADING","DELETE_ACCOUNT","GET_ACCOUNTS","GET_TRANSACTIONS","TRANSACTIONS_LOADING","GET_AUTH","addAccount","plaidData","dispatch","accounts","post","then","res","type","payload","data","getTransactions","concat","catch","err","console","log","deleteAccount","window","confirm","id","newAccounts","filter","account","_id","delete","getAccounts","setAccountsLoading","get","setTransactionsLoading","getAuth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  ADD_ACCOUNT,\n  ACCOUNTS_LOADING,\n  DELETE_ACCOUNT,\n  GET_ACCOUNTS,\n  GET_TRANSACTIONS,\n  TRANSACTIONS_LOADING,\n  GET_AUTH\n} from \"./types\";\n\n//add account\n\nexport const addAccount = plaidData => dispatch => {\n  const accounts = plaidData.accounts;\n  axios\n    .post(\"/api/plaid/accounts/add\", plaidData)\n    .then(res => dispatch({ type: ADD_ACCOUNT, payload: res.data }))\n    .then(data =>\n      accounts ? dispatch(getTransactions(accounts.concat(data.payload))) : null\n    )\n    .catch(err => console.log(err));\n};\n\nexport const deleteAccount = plaidData => dispatch => {\n  if (window.confirm(\"Are you sure you want to remove this account?\")) {\n    const id = plaidData.id;\n    const newAccounts = plaidData.accounts.filter(\n      account => account._id !== id\n    );\n    axios\n      .delete(`/api/plaid/accounts/${id}`)\n      .then(res => {\n        dispatch({\n          type: DELETE_ACCOUNT,\n          payload: id\n        });\n      })\n      .then(newAccounts ? dispatch(getTransactions(newAccounts)) : null)\n      .catch(err => console.log(err));\n  }\n};\n\n// Get all accounts for specific user\n\nexport const getAccounts = () => dispatch => {\n  dispatch(setAccountsLoading());\n  axios\n    .get(\"api/plaid/accounts\")\n    .then(res => dispatch({ type: GET_ACCOUNTS, payload: res.data }))\n    .catch(err => dispatch({ type: GET_ACCOUNTS, payload: null }));\n};\n\n// Accounts loading\n\nexport const setAccountsLoading = () => {\n  return {\n    type: ACCOUNTS_LOADING\n  };\n};\n\n// Get Transactions\nexport const getTransactions = plaidData => dispatch => {\n  dispatch(setTransactionsLoading());\n  axios\n    .post(\"/api/plaid/accounts/transactions\", plaidData)\n    .then(res =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_TRANSACTIONS,\n        payload: null\n      })\n    );\n};\n// Transactions loading\nexport const setTransactionsLoading = () => {\n  return {\n    type: TRANSACTIONS_LOADING\n  };\n};\n\n// Get Auth\n\nexport const getAuth = plaidData => dispatch => {\n  axios\n    .post(\"/api/plaid/accounts/auth\", plaidData)\n    .then(res =>\n      dispatch({\n        type: GET_AUTH,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_AUTH,\n        payload: null\n      })\n    );\n};\n"]},"metadata":{},"sourceType":"module"}