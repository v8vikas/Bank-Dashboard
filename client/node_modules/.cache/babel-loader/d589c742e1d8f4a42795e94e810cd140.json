{"ast":null,"code":"var _jsxFileName = \"D:\\\\Bank-Dashboard-App-master\\\\client\\\\src\\\\components\\\\dashboard\\\\Accounts.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Dashboard from \"./Dashboard\";\nimport PlaidLink from \"react-plaid-link\";\n\nclass Accounts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnSuccess = (token, metadata) => {\n      const plaidData = {\n        public_token: token,\n        metadata: metadata\n      };\n      this.props.addAccount(plaidData);\n    };\n\n    this.handleLogoutClick = e => {\n      e.preventDefault();\n      this.props.logoutUser();\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAccounts();\n  } // Add account\n\n\n  render() {\n    const {\n      user\n    } = this.props.auth;\n    const {\n      accounts,\n      accountsLoading\n    } = this.props.plaid;\n    let dashboardContent;\n\n    if (accounts == null || accountsLoading) {\n      dashboardContent = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 26\n        }\n      }, \"Loading...\");\n    } else if (accounts.length > 0) {\n      // user has linked accounts\n      dashboardContent = /*#__PURE__*/React.createElement(Dashboard, {\n        user: user,\n        accounts: accounts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 26\n        }\n      });\n    } else {\n      // user has no linked accounts\n      dashboardContent = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"plaid-landing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"Welcome, \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }\n      }, user.name)), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      }, \"To get started link your first bank account\"), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PlaidLink, {\n        className: \"plaid\",\n        clientName: \"UNIBANK\",\n        env: \"sandbox\",\n        product: [\"auth\", \"transactions\"],\n        publicKey: \"e3b9a451ef03d85716196f21f33e1f\",\n        onExit: this.handleLogoutClick,\n        onSuccess: this.handleOnSuccess,\n        onScriptLoad: () => this.setState({\n          loaded: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, \"Open Link and connect your bank!\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onLogoutClick,\n        className: \"form-logout-button plaid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, \"Logout\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, dashboardContent);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  getAccounts,\n  addAccount\n})(Accounts);","map":{"version":3,"sources":["D:/Bank-Dashboard-App-master/client/src/components/dashboard/Accounts.js"],"names":["React","connect","logoutUser","getAccounts","addAccount","Dashboard","PlaidLink","Accounts","Component","handleOnSuccess","token","metadata","plaidData","public_token","props","handleLogoutClick","e","preventDefault","componentDidMount","render","user","auth","accounts","accountsLoading","plaid","dashboardContent","length","name","setState","loaded","onLogoutClick","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { getAccounts, addAccount } from \"../../actions/accountActions\";\nimport Dashboard from \"./Dashboard\";\nimport PlaidLink from \"react-plaid-link\";\n\nclass Accounts extends React.Component {\n  componentDidMount() {\n    this.props.getAccounts();\n  }\n\n  // Add account\n  handleOnSuccess = (token, metadata) => {\n    const plaidData = {\n      public_token: token,\n      metadata: metadata\n    };\n    this.props.addAccount(plaidData);\n  };\n\n  // Logout\n  handleLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  render() {\n    const { user } = this.props.auth;\n    const { accounts, accountsLoading } = this.props.plaid;\n\n    let dashboardContent;\n\n    if (accounts == null || accountsLoading) {\n      dashboardContent = <div>Loading...</div>;\n    } else if (accounts.length > 0) {\n      // user has linked accounts\n      dashboardContent = <Dashboard user={user} accounts={accounts} />;\n    } else {\n      // user has no linked accounts\n      dashboardContent = (\n        <div className=\"plaid-landing\">\n          <h3>\n            Welcome, <b>{user.name}</b>\n          </h3>\n          <p>To get started link your first bank account</p>\n          <>\n            <PlaidLink\n              className=\"plaid\"\n              clientName=\"UNIBANK\"\n              env=\"sandbox\"\n              product={[\"auth\", \"transactions\"]}\n              publicKey={\"e3b9a451ef03d85716196f21f33e1f\"}\n              onExit={this.handleLogoutClick}\n              onSuccess={this.handleOnSuccess}\n              onScriptLoad={() => this.setState({ loaded: true })}\n            >\n              Open Link and connect your bank!\n            </PlaidLink>\n            <button\n              onClick={this.onLogoutClick}\n              className=\"form-logout-button plaid\"\n            >\n              Logout\n            </button>\n          </>\n        </div>\n      );\n    }\n    return <div>{dashboardContent}</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  plaid: state.plaid\n});\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, getAccounts, addAccount }\n)(Accounts);\n"]},"metadata":{},"sourceType":"module"}